name: Java CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master

jobs:
  build:
    name: Test on java-version ${{ matrix.java-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        java-version: ['8.0.x', '9.0.x', '10.0.x']
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Set environment variables
        run: |
          echo "::set-env name=DEV_VERSION::$(./gradlew properties | awk '/^version:/ { print $2 }')"
          echo "::set-env name=RELEASE_VERSION::$(./gradlew properties -Prelease | awk '/^version:/ { print $2 }')"
      - name: Gradle build on ${{ matrix.java-version }}
        if: matrix.os == 'ubuntu-latest'
        run: |
          ./gradlew build
          ./gradlew runFunctionalTest
          javac -cp api/build/libs/minio-${DEV_VERSION}-all.jar functional/TestUserAgent.java
          java -Dversion=${DEV_VERSION} -cp api/build/libs/minio-${DEV_VERSION}-all.jar:functional TestUserAgent
          ./gradlew build -Prelease
          javac -cp api/build/libs/minio-${RELEASE_VERSION}-all.jar functional/TestUserAgent.java
          java -Dversion=${RELEASE_VERSION} -cp api/build/libs/minio-${RELEASE_VERSION}-all.jar:functional TestUserAgent
      - name: Gradle build on ${{ matrix.java-version }}
        if: matrix.os == 'windows-latest'
        run: |
          $Env:Path += ';.'
          gradlew.bat build
          gradlew.bat runFunctionalTest
